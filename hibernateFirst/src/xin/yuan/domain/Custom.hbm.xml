<?xml version="1.0" encoding="UTF-8" ?>



<!DOCTYPE hibernate-mapping PUBLIC
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">


<hibernate-mapping package="xin.yuan.domain">
    <class name="Customer" table="tb_customer">
        <id name="custId" column="cust_id"><!--配置主键用id-->
            <!--generator的作用是指定一个类作为主键自增长，
            native的意思是采用所连接的数据库作为自增长-->
            <generator class="native"></generator>
        </id>
        <property name="custName" column="cust_name"></property>
        <property name="custSource" column="cust_source"></property>
        <property name="custLevel" column="cust_level"></property>
        <property name="custIndustry" column="cust_industry"></property>
        <property name="custAddress" column="cust_address"></property>
       <property name="custPhone" column="cust_phone"></property>

        <!--
        主表的映射文件配置：set标签
        跟MySQL不一样，MySQL是在从表中指定外键，而hql要在主表中为从表再次申明一次外键
             inverse的作用是一的那一方是否放弃对从表中的外键进行维护，true为放弃，此时由从表自己维护自己的外键,
             外键在谁身上，就由谁维护，一的那一方就要放弃对外键的维护，如果不放弃的话会执行两条update语句，
             造成重复插入，资源浪费
             cascade为级联操作,级联就是为了解决繁琐的同一种操作，在两个有关系的映射中添加级联操作，当一个对象执行某一操作时
             那与之对应的另一对象就会执行同样的操作-->
        <set name="linkMans" table="tb_linkman" inverse="true" cascade="save-update" >
            <key column="lkm_cust_id"></key><!--给从表指定外键-->
            <one-to-many class="xin.yuan.domain.LinkMan"></one-to-many><!--指向对方实体类，不然不知道给谁-->
        </set>

    </class>
</hibernate-mapping>